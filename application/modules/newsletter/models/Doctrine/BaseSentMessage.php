<?php

/**
 * Newsletter_Model_Doctrine_BaseSentMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $message_id
 * @property integer $subscriber_id
 * @property integer $group_id
 * @property timestamp $sent_at
 * @property boolean $sent
 * @property string $error
 * @property Newsletter_Model_Doctrine_Message $Message
 * @property Newsletter_Model_Doctrine_Subscriber $Subscriber
 * @property Newsletter_Model_Doctrine_Group $Group
 * 
 * @package    Admi
 * @subpackage Newsletter
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Newsletter_Model_Doctrine_BaseSentMessage extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('newsletter_sent_messages');
        $this->hasColumn('id', 'integer', 6, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '6',
             ));
        $this->hasColumn('message_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('subscriber_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('group_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('sent_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('sent', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('error', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Newsletter_Model_Doctrine_Message as Message', array(
             'local' => 'message_id',
             'foreign' => 'id'));

        $this->hasOne('Newsletter_Model_Doctrine_Subscriber as Subscriber', array(
             'local' => 'subscriber_id',
             'foreign' => 'id'));

        $this->hasOne('Newsletter_Model_Doctrine_Group as Group', array(
             'local' => 'group_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
<?php

/**
 * Banner_Model_Doctrine_BaseBannerLeft
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $href
 * @property timestamp $start_display_date
 * @property timestamp $end_display_date
 * @property integer $photo_root_id
 * @property integer $views
 * @property integer $clicks
 * 
 * @package    Admi
 * @subpackage Banner
 * @author     Andrzej WilczyÅ„ski <and.wilczynski@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Banner_Model_Doctrine_BaseBannerLeft extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('banner_banner_left');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('href', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('start_display_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_display_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('photo_root_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('views', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));
        $this->hasColumn('clicks', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => false,
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
        $this->actAs($nestedset0);
    }
}
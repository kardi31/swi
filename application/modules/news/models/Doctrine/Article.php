<?php

/**
 * News_Model_Doctrine_Article
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Admi
 * @subpackage News
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class News_Model_Doctrine_Article extends News_Model_Doctrine_BaseArticle
{
    const STATUS_CURRENT = 'current';
    const STATUS_ARCHIVE = 'archive';
    
    public static $articlePhotoDimensions = array(
        '126x126' => 'Admin thumbnail',                  // admin
        '400x400' => 'Main photo'
    );
    
    public static function getArticlePhotoDimensions() {
        return self::$articlePhotoDimensions;
    }
    
    public function setId($id) {
        $this->_set('id', $id);
    }
    
    public function getId() {
        return $this->_get('id');
    }
    
    public function setCategoryId($categoryId) {
        $this->_set('category_id', $categoryId);
    }
    
    public function getCategoryId() {
        return $this->_get('category_id');
    }
    
    public function setAuthorId($authorId) {
        $this->_set('author_id', $authorId);
    }
    
    public function getAuthorId() {
        return $this->_get('author_id');
    }
    
    public function setLastEditorId($lastEditorId) {
        $this->_set('last_editor_id', $lastEditorId);
    }
    
    public function getLastEditorId() {
        return $this->_get('last_editor_id');
    }
    
    public function setPublish($publish = true) {
        $this->_set('publish', $publish);
    }
    
    public function isPublish() {
        return $this->_get('publish');
    }
    
    public function setPublishDate($publishDate) {
        $this->_set('publish_date', $publishDate);
    }
    
    public function getPublishDate() {
        return $this->_get('publish_date');
    }
    
    public function getMetatagId() {
        return $this->_get('metatag_id');    
    }
    
    public function setUp() {
        parent::setUp();
        $this->hasOne('User_Model_Doctrine_User as Author', array(
            'local' => 'author_id',
            'foreign' => 'id'
        ));
        $this->hasOne('User_Model_Doctrine_User as LastEditor', array(
            'local' => 'last_editor_id',
            'foreign' => 'id'
        ));
        $this->hasOne('Media_Model_Doctrine_Photo as PhotoRoot', array(
            'local' => 'photo_root_id',
            'foreign' => 'id'
        ));
        $this->hasMany('Media_Model_Doctrine_Photo as Photos', array(
            'local' => 'photo_root_id',
            'foreign' => 'root_id'
        ));
        $this->hasOne('Default_Model_Doctrine_Metatag as Metatags', array(
            'local' => 'metatag_id',
            'foregin' => 'id'
        ));
    }
}
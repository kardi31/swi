<?php

/**
 * Product_Model_Doctrine_BasePreview
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $description
 * @property boolean $status
 * @property string $youtube
 * @property integer $producer_id
 * @property integer $photo_root_id
 * @property integer $metatag_id
 * @property integer $views
 * @property integer $clicks
 * @property Product_Model_Doctrine_Producer $Producer
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $Comments
 * 
 * @package    Admi
 * @subpackage Product
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Product_Model_Doctrine_BasePreview extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product_preview');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('youtube', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('producer_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('photo_root_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('metatag_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('views', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));
        $this->hasColumn('clicks', 'integer', 4, array(
             'type' => 'integer',
             'default' => 0,
             'length' => '4',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product_Model_Doctrine_Producer as Producer', array(
             'local' => 'producer_id',
             'foreign' => 'id'));

        $this->hasMany('Product_Model_Doctrine_Category as Categories', array(
             'refClass' => 'Product_Model_Doctrine_PreviewCategory',
             'local' => 'preview_id',
             'foreign' => 'category_id'));

        $this->hasMany('Product_Model_Doctrine_Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'preview_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}
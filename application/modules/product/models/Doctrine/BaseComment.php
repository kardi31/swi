<?php

/**
 * Product_Model_Doctrine_BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property clob $description
 * @property boolean $status
 * @property boolean $moderation
 * @property string $nick
 * @property integer $user_id
 * @property integer $preview_id
 * @property integer $product_id
 * @property decimal $partial_rate
 * @property Product_Model_Doctrine_Preview $Preview
 * @property Product_Model_Doctrine_Product $Product
 * 
 * @package    Admi
 * @subpackage Product
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Product_Model_Doctrine_BaseComment extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('product_comment');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('moderation', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('nick', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('preview_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('partial_rate', 'decimal', null, array(
             'type' => 'decimal',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product_Model_Doctrine_Preview as Preview', array(
             'local' => 'preview_id',
             'foreign' => 'id'));

        $this->hasOne('Product_Model_Doctrine_Product as Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}